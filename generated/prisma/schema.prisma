// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique @db.VarChar(50)
  password  String   @db.VarChar(255)
  nickname  String   @db.VarChar(50)
  email     String   @db.VarChar(50)
  headPic   String   @default("") @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  friends        Friendship[] @relation("userToFriend")
  inverseFriends Friendship[] @relation("friendToUser")
}

model Friendship {
  user   User @relation("userToFriend", fields: [userId], references: [id])
  userId Int

  friend   User @relation("friendToUser", fields: [friendId], references: [id])
  friendId Int

  @@id([userId, friendId])
}

model FriendRequest {
  id         Int      @id @default(autoincrement())
  fromUserId Int
  toUserId   Int
  reason     String   @db.VarChar(100)
  status     Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Chatroom {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(50)
  type      Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UserChatroom {
  userId     Int
  chatroomId Int

  @@id([userId, chatroomId])
}
